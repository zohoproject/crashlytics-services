#!/usr/bin/env ruby

# Usage instructions:
#
#   bundle exec bin/test_service_hook <service-config.yml> <service-name>
#
# Example:
#
#   bundle exec ruby bin/test_service_hook /path/to/service-config.yml trello
#
require 'service'
require 'yaml'

service_hook_config_file = ARGV[0]
service = ARGV[1]
config = {}

# symbolize keys in the config hash
YAML.load_file(service_hook_config_file)[service].each_pair do |key, value|
  config[key.to_sym] = value
end


issue_impact = {
  :event => 'issue_impact_change',
  :display_id => 1,
  :impact_level => 1,
  :method => 'SomeMethod',
  :title => 'SomeTitle',
  :impacted_devices_count => 0,
  :crashes_count => 0,
  :url => 'http://example.com',
  :app => {
    :name => 'Test',
    :bundle_identifier => 'io.fabric.test',
    :platform => 'platform'
  }
}

issue_velocity_alert = {
  :event => 'issue_velocity_alert',
  :display_id => 1,
  :method => 'SomeMethod',
  :title => 'SomeTitle',
  :crash_percentage => 1.02,
  :version => '1.0 (1.1)',
  :url => 'http://example.com',
  :app => {
    :name => 'Test',
    :bundle_identifier => 'io.fabric.test',
    :platform => 'platform'
  }
}

Service.services[service].receive(:verification, config, nil, lambda { |msg| puts msg })
Service.services[service].receive(:issue_impact_change, config, issue_impact, lambda { |msg| puts msg })
Service.services[service].receive(:issue_velocity_alert, config, issue_velocity_alert, lambda { |msg| puts msg })
